definitions:
  domain.Product:
    properties:
      brand_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      product_category_id:
        type: integer
      product_image:
        type: string
    required:
    - brand_id
    - name
    - product_category_id
    type: object
  domain.ProductBrand:
    properties:
      brand_name:
        type: string
      id:
        type: integer
    type: object
  request.AdminLoginInfo:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.NewAdminInfo:
    properties:
      email:
        description: Email    string `json:"email" validate:"required,email"`
        type: string
      password:
        type: string
      phone:
        maxLength: 10
        minLength: 10
        type: string
      user_name:
        type: string
    required:
    - email
    - password
    - phone
    - user_name
    type: object
  request.NewCategory:
    properties:
      category_name:
        type: string
    type: object
  request.NewProductDetails:
    properties:
      color:
        type: string
      display_size:
        type: string
      graphics_card:
        type: string
      model_no:
        type: string
      os:
        type: string
      price:
        type: number
      processor:
        type: string
      product_id:
        type: integer
      product_item_image:
        type: string
      qty_in_stock:
        type: integer
      ram:
        type: string
      sku:
        type: string
      storage:
        type: string
    required:
    - color
    - display_size
    - model_no
    - os
    - price
    - processor
    - product_id
    - qty_in_stock
    - sku
    - storage
    type: object
  request.NewUserInfo:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        description: |-
          Email    string `json:"email" `
          Phone    string `json:"phone" `
        type: string
      phone:
        maxLength: 10
        minLength: 10
        type: string
    required:
    - email
    - password
    - phone
    type: object
  request.OTPVerify:
    properties:
      otp:
        type: string
      otpid:
        type: string
    required:
    - otp
    - otpid
    type: object
  request.UserAddressInput:
    properties:
      city:
        type: string
      district:
        type: string
      house_number:
        type: string
      landmark:
        type: string
      pincode:
        type: string
      state:
        type: string
      street:
        type: string
    type: object
  request.UserLoginEmail:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  response.Response:
    properties:
      data: {}
      errors: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
info:
  contact: {}
  description: Ecommerce REST API Microservice built using Go, PSQL, REST API following
    Clean Architecture.
  title: Ecommerce REST API Microservice
  version: "1.0"
paths:
  /admin/admins:
    post:
      consumes:
      - application/json
      description: Super admin can create a new admin from admin panel
      operationId: create-admin
      parameters:
      - description: New Admin Details
        in: body
        name: admin_details
        required: true
        schema:
          $ref: '#/definitions/request.NewAdminInfo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new admin from admin panel
      tags:
      - Admin
  /admin/brands:
    post:
      consumes:
      - application/json
      description: Admins can create new brands from the admin panel
      operationId: create-brand
      parameters:
      - description: New brand name
        in: body
        name: brand_name
        required: true
        schema:
          $ref: '#/definitions/domain.ProductBrand'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: Admin can create new product brand
      tags:
      - Product Brand
  /admin/categories:
    post:
      consumes:
      - application/json
      description: Admins can create new categories from the admin panel
      operationId: create-category
      parameters:
      - description: New category name
        in: body
        name: category_name
        required: true
        schema:
          $ref: '#/definitions/request.NewCategory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create new product category
      tags:
      - Product Category
  /admin/login:
    post:
      consumes:
      - application/json
      description: Admin Login forthe admin review
      operationId: admin-login
      parameters:
      - description: Admin Login Credentials
        in: body
        name: admin_credentials
        required: true
        schema:
          $ref: '#/definitions/request.AdminLoginInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: Admin Login for the admin
      tags:
      - Admin
  /admin/product-details/:
    post:
      consumes:
      - application/json
      description: This endpoint allows an admin user to add the product details.
      operationId: add-product-details
      parameters:
      - description: Product details
        in: body
        name: product_details
        required: true
        schema:
          $ref: '#/definitions/request.NewProductDetails'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add a product details
      tags:
      - Product Details
  /admin/products:
    get:
      consumes:
      - application/json
      description: Admins and users can list all products
      parameters:
      - description: Number of items to retrieve per page
        in: query
        name: limit
        type: integer
      - description: Enter the page no to display
        in: query
        name: page
        type: integer
      - description: sorting criteria for showing the products
        in: query
        name: sort_by
        type: string
      - description: sorting in descending order
        in: query
        name: sort_desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: List All products
      tags:
      - Products
  /admin/products/:
    post:
      consumes:
      - application/json
      description: Admins can create new product listings
      operationId: create-product
      parameters:
      - description: new product details
        in: body
        name: new_product_details
        required: true
        schema:
          $ref: '#/definitions/domain.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: Admin can create new product listings
      tags:
      - Products
  /user/addresses/:
    post:
      consumes:
      - application/json
      description: Add address
      operationId: add-address
      parameters:
      - description: User address
        in: body
        name: user_address
        required: true
        schema:
          $ref: '#/definitions/request.UserAddressInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: User can add the user address
      tags:
      - user
  /user/login/email:
    post:
      consumes:
      - application/json
      description: user Login
      operationId: user-login
      parameters:
      - description: user Login Credentials
        in: body
        name: user_credentials
        required: true
        schema:
          $ref: '#/definitions/request.UserLoginEmail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Login
      tags:
      - user
  /user/products:
    get:
      consumes:
      - application/json
      description: Admins and users can list all products
      parameters:
      - description: Number of items to retrieve per page
        in: query
        name: limit
        type: integer
      - description: Enter the page no to display
        in: query
        name: page
        type: integer
      - description: sorting criteria for showing the products
        in: query
        name: sort_by
        type: string
      - description: sorting in descending order
        in: query
        name: sort_desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: List All products
      tags:
      - Products
  /user/signup:
    post:
      consumes:
      - application/json
      description: Create a new user with the specified details.
      operationId: Signup-user
      parameters:
      - description: New user Details
        in: body
        name: user_details
        required: true
        schema:
          $ref: '#/definitions/request.NewUserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: api for Signup a new user
      tags:
      - Users Signup
  /user/signup/otp/verify:
    post:
      consumes:
      - application/json
      description: verify the otp of a user.
      operationId: Signup-otpverify-user
      parameters:
      - description: OTP verification details
        in: body
        name: otpverify
        required: true
        schema:
          $ref: '#/definitions/request.OTPVerify'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.Response'
      summary: signup otp verification
      tags:
      - Users otp verify
swagger: "2.0"
