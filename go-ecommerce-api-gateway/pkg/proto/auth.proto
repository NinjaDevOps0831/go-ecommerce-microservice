syntax= "proto3";

package pb;
option go_package = "./pkg/pb";

service AuthService {
    rpc Register (RegisterRequest) returns (RegisterResponse){}
    rpc RegisterOtpVerify (OtpVerifyRequest) returns (OtpVerifyResponse){}
    rpc Login (LoginRequest) returns (LoginResponse){}
  //  rpc Validate (ValidateRequest) returns (ValidateResponse){}
    rpc AdminSignup (AdminSignupRequest) returns (AdminSignupResponse){}
    rpc AdminLogin (LoginRequest) returns (AdminLoginResponse){}
    rpc AddUserAddress (AddUserAddressRequest) returns (AddUserAddressResponse){}
  //  rpc ListUserAddress (ShowUserAddressRequest) returns (ShowUserAddressResponse){}
}

//Register
message RegisterRequest {
    string first_name = 1;
    string last_name = 2;
    string email = 3;
    string phone = 4;
    string password = 5;
}

message RegisterResponse {
    int64 status = 1;
    string responseid=2;
    string error = 3;
}

message OtpVerifyRequest {
    string Otp=1;
    string OtpId=2;    
}

message OtpVerifyResponse {
    int64 status=1;
    string error=2;
    string response=3;
}

// Login

message LoginRequest {
    string email = 1;
    string password = 2;
}

  
message User {    
    string first_name = 1;    
}

message LoginResponse {
    int64 status = 1;
    string error = 2;
    User user=3;
    string token = 4;
}

message AdminSignupRequest {
    string user_name = 1;    
    string email = 2;
    string phone = 3;
    string password = 4;
}

message Admin {    
    uint32 id = 1;
    string user_name = 2; 
    string email = 3;
    string phone_no = 4;
    string password = 5;   
    bool is_super_admin = 6;
    bool is_blocked = 7;    
}

message AdminSignupResponse {
    int64 status = 1;
    string error = 2;
    Admin Admin=3;
}

message AdminDataOutput {    
    uint32 id = 1;
    string user_name = 2; 
    string email = 3;
    string phone = 4;      
    bool is_super_admin = 5;    
}


message AdminLoginResponse {
    int64 status = 1;
    string error = 2;
    AdminDataOutput AdminDataOutput=3;
    string token = 4;
}

message AddUserAddressRequest {
    uint32 userid=1;
    string HouseNumber=2;
    string Street=3;
    string City=4;
    string District=5;
    string State=6;
    string Pincode=7;
    string Landmark=8;
}

message UserAddressOutput {    
    uint32 id =1;
    uint32 userid=2;
    string HouseNumber=3;
    string Street=4;
    string City=5;
    string District=6;
    string State=7;
    string Pincode=8;
    string Landmark=9;   
}

message AddUserAddressResponse {
    int32 status=1;
    string Response=2;
    UserAddressOutput UserAddressOutput=3;
}

// message ShowUserAddressRequest {
//     uint32 userid=1;
// }

// message UserAddress {
//     uint32   ID=1;
//     string HouseName=2;
//     string Street=3;
//     string City=4;
//     string State=5;
//     string Country=6;
//     string Pincode=7;
// }

// message ShowUserAddressResponse {
//     int32 status=1;
//     repeated UserAddress Address=2;
// }